name: Create Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.
  workflow_dispatch:  # Allows manual triggering

permissions:
  contents: write
  pull-requests: read

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Create release package
      run: |
        # Create a temporary directory for the release files
        mkdir -p release-package
        
        # Copy the assets folder and start.bat to the package directory
        cp -r assets release-package/
        cp start.bat release-package/
        
        # Create the zip file
        cd release-package
        zip -r ../sploder-timecapsule-release.zip .
        cd ..
        
        # Verify the zip contents
        echo "Zip file contents:"
        unzip -l sploder-timecapsule-release.zip
        
    - name: Get tag name
      id: get_tag
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        else
          echo "tag_name=manual-$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT
        fi
        
    - name: Create Release Notes
      id: release_notes
      run: |
        cat > release_notes.md << 'EOF'
        ## Sploder Timecapsule Release ${{ steps.get_tag.outputs.tag_name }}
        
        This release contains:
        - `start.bat` - Main application launcher
        - `assets/` - All necessary assets including executables, configuration files, and game data
        
        ### Installation Instructions:
        1. Download the `sploder-timecapsule-release.zip` file
        2. Extract it to a folder of your choice
        3. Run `start.bat` to launch the application
        
        ### Requirements:
        - Windows operating system
        - Network access to the API server (configured in start.bat)
        
        ### API Server Configuration:
        The API server URL can be configured by editing the `API_SERVER` variable at the top of `start.bat`.
        
        ### What's Changed:
        - Complete SQLite to API migration
        - URL encoding support for game names with spaces and special characters
        - Centralized server configuration
        - Improved error handling and pagination
        EOF
        
    - name: Create Release and Upload Asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Create the release using gh CLI
        gh release create "${{ steps.get_tag.outputs.tag_name }}" \
          --title "Sploder Timecapsule ${{ steps.get_tag.outputs.tag_name }}" \
          --notes-file release_notes.md \
          ./sploder-timecapsule-release.zip